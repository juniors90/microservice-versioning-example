name: Flask CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/dev.txt
    - name: Run Tests with Flask CLI
      run: |
        export FLASK_APP="entrypoint.py"
        export FLASK_DEBUG="True"
        export APIREST_MOCK="True"
        export APIREST_MODE="development"
        export APIREST_DB="sqlite:///./development.db"
        export APIREST_PRODUCTION_DB="sqlite:///./production.db"
        export APIREST_TEST_DB="sqlite:///./test.db"
        export APIREST_AUTHENTIFICATION_SERVICE="https://api.rest.app/authentification"
        export APIREST_ORIGINS="*"
        export SENTRY_DSN=""
        flask test
    - name: Run Tests Python Unittest
      run: |
        export FLASK_APP="entrypoint.py"
        export FLASK_DEBUG="True"
        export APIREST_MOCK="True"
        export APIREST_MODE="development"
        export APIREST_DB="sqlite:///./development.db"
        export APIREST_PRODUCTION_DB="sqlite:///./production.db"
        export APIREST_TEST_DB="sqlite:///./test.db"
        export APIREST_AUTHENTIFICATION_SERVICE="https://api.rest.app/authentification"
        export APIREST_ORIGINS="*"
        export SENTRY_DSN=""
        python -m coverage_report
    - name: Upload Coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        directory: ./coverage/reports/
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: false
        verbose: true
